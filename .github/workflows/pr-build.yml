name: PR Build
# on:
#   pull_request:
#     branches:
#       - main
on:
  push:
    branches:
      - main
      - 'release-*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          #- windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      - uses: gradle/wrapper-validation-action@v1

      - name: check patches
        run: |
          if [[ -f .github/patchs/opentelemetry-java.patch ]]; then
            echo 'patch_otel_java=true' >> $GITHUB_ENV
          fi
          if [[ -f .github/patchs/opentelemetry-java-instrumentation.patch ]]; then
            echo 'patch_otel_java_instrumentation=true' >> $GITHUB_ENV
          fi
        shell: bash

      - name: Try to patch if necessary
        if: ${{ contains(github.ref, 'refs/heads/release-') }}
        run: .github/scripts/patch.sh
        shell: bash

      - name: Build otel_java
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          build-root-directory: opentelemetry-java
        if: ${{ env.patch_otel_java == 'true'  && matrix.os == 'ubuntu-latest'}}

      - name: Publish otel java to maven local
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publishToMavenLocal
          build-root-directory: opentelemetry-java
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
        if: ${{ env.patch_otel_java == 'true' }}

      - name: Build otel java instrumentation
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check -x spotlessCheck
          build-root-directory: opentelemetry-java-instrumentation
        if: ${{ env.patch_otel_java_instrumentation == 'true'  && matrix.os == 'ubuntu-latest'}}

      - name: Publish otel java instrumentation to maven local
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publishToMavenLocal
          build-root-directory: opentelemetry-java-instrumentation
        if: ${{ env.patch_otel_java_instrumentation == 'true' }}
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}

      - name: Build with Gradle with Integration tests
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build integrationTests --stacktrace -PenableCoverage=true -PlocalDocker=true
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        if: ${{ matrix.os != 'ubuntu-latest' }}
        with:
          arguments: build --stacktrace -PenableCoverage=true
      - uses: codecov/codecov-action@v1
